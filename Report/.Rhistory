# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mp_speedup, col = "Open MP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "Open MP")) +
geom_line(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_point(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
#, fig.width=7,fig.height=3
strong_all["mp_speedup"] <- strong_all[1,2]/strong_all["mp_all"]
strong_all["model_mp_speedup"] <- model_mp[1,3]/model_mp["model_mp"]
gg1 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mp_all, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_all, col = "OpenMP")) +
theme(legend.position = "top")
gg2 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_point(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_line(mapping = aes(Process, mp_speedup, col = "Open MP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "Open MP")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
proc_less <- data.frame(c(1,2,4,8,16))
mpi <- read.csv("../output/serialize.csv", header = F, col.names = c("ser_des", "mpi"))
mpi["no_ser_des"] <- mpi["mpi"] - mpi["ser_des"]
mpi["Process"] <- proc_less
mpi["Serial"] <- rep(60, 5)
k = 12
mpi
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + mpi["Process"]*108
mpi
#preprocessing
proc <- data.frame(c(1,2,4,8,16,24))
proc_all <- data.frame(seq(1,24))
colnames(proc) <- "Process"
colnames(proc_all) <- "Process"
serial <- read.table("../output/serial.out", header = FALSE, col.names = c("Serial"))
mp <- read.table("../output/mp.out", header = FALSE, col.names = c("mp"))
mp_all <- read.table("../output/mp_1_24.out", header = FALSE, col.names = c("mp_all"))
strong <- data.frame(proc, serial, mp)
strong_all <- data.frame(proc_all, mp_all)
model_mp <- data.frame(proc_all, rep(60, 24))
colnames(model_mp) <- c("Process", "time_serial")
model_mp["model_mp"] <- model_mp["time_serial"] /model_mp["Process"] + 16
proc_less <- data.frame(c(1,2,4,8,16))
mpi <- read.csv("../output/serialize.csv", header = F, col.names = c("ser_des", "mpi"))
mpi["no_ser_des"] <- mpi["mpi"] - mpi["ser_des"]
mpi["Process"] <- proc_less
mpi["Serial"] <- rep(60, 5)
k = 12
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + 108/mpi["Process"]
mpi
mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"]
mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + 108/mpi["Process"]
108/mpi["Process"]
mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"]
mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + 108/mpi["Process"]
mpi
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + (72/mpi["Process"]) + (108/mpi["Process"])
mpi
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72
mpi
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72 + 108
mpi
plot_model <- merge(strong_all, mpi, by="Process")
plot_model
strong_all
proc_less <- data.frame(c(1,2,4,8,16))
mpi_weak <- read.table("../output/ompi_weak.out", header = FALSE, col.names = c("ompi_weak"))
mpi_weak["Process"] <- proc_less
mp_weak <- read.table("../output/mp_weak.out", header = FALSE, col.names = c("mp_weak"))
mp_weak["Process"] <- proc
weak <- merge(mpi_weak,mp_weak, bu="Process")
weak["ompi_speedup"] <- weak[1,2]/weak["ompi_weak"]
weak["mp_speedup"] <- weak[1,3]/weak["mp_weak"]
ggw1 <- ggplot(data = weak)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, ompi_weak, col = "Open MPI")) +
geom_point(mapping = aes(Process, ompi_weak, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp_weak, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_weak, col = "OpenMP")) +
theme(legend.position = "top")
ggw2 <- ggplot(data = weak)+
xlab("N of process (log)") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, ompi_speedup, col = "Open MPI")) +
geom_point(mapping = aes(Process, ompi_speedup, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp_speedup, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "OpenMP")) +
theme(legend.position = "top")
grid.arrange(ggw1, ggw2, ncol=2)
plot_model
mpi
#Plot MPI
# plot_model <- merge(strong_all, mpi, by="Process")
ggplot(data = mpi)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, Model, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, Model, col = "Model Open MPI"))
library(ggplot2)
require(gridExtra)
#preprocessing
proc <- data.frame(c(1,2,4,8,16,24))
proc_all <- data.frame(seq(1,24))
colnames(proc) <- "Process"
colnames(proc_all) <- "Process"
serial <- read.table("../output/serial.out", header = FALSE, col.names = c("Serial"))
mp <- read.table("../output/mp.out", header = FALSE, col.names = c("mp"))
mp_all <- read.table("../output/mp_1_24.out", header = FALSE, col.names = c("mp_all"))
strong <- data.frame(proc, serial, mp)
strong_all <- data.frame(proc_all, mp_all)
model_mp <- data.frame(proc_all, rep(60, 24))
colnames(model_mp) <- c("Process", "time_serial")
model_mp["model_mp"] <- model_mp["time_serial"] /model_mp["Process"] + 16
proc_less <- data.frame(c(1,2,4,8,16))
mpi <- read.csv("../output/serialize.csv", header = F, col.names = c("ser_des", "mpi"))
mpi["no_ser_des"] <- mpi["mpi"] - mpi["ser_des"]
mpi["Process"] <- proc_less
mpi["Serial"] <- rep(60, 5)
k = 12
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72 + 108
mpi
ggplot(data = mpi)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, Model, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, Model, col = "Model Open MPI"))
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + 108
ggplot(data = mpi)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, Model, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, Model, col = "Model Open MPI"))
ggplot(data = plot1)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, Serial, col = "Serial")) +
geom_point(mapping = aes(Process, Serial, col = "Serial")) +
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp, col = "OpenMP")) +
geom_line(mapping = aes(Process, no_ser_des, col = "Open MPI\nwithout deserialization")) +
geom_point(mapping = aes(Process, no_ser_des, col = "Open MPI\nwithout deserialization"))
mpi
serial
mpi[6,1] <- serial[1,1]
mpi
#preprocessing
proc <- data.frame(c(1,2,4,8,16,24))
proc_all <- data.frame(seq(1,24))
colnames(proc) <- "Process"
colnames(proc_all) <- "Process"
serial <- read.table("../output/serial.out", header = FALSE, col.names = c("Serial"))
mp <- read.table("../output/mp.out", header = FALSE, col.names = c("mp"))
mp_all <- read.table("../output/mp_1_24.out", header = FALSE, col.names = c("mp_all"))
strong <- data.frame(proc, serial, mp)
strong_all <- data.frame(proc_all, mp_all)
model_mp <- data.frame(proc_all, rep(60, 24))
colnames(model_mp) <- c("Process", "time_serial")
model_mp["model_mp"] <- model_mp["time_serial"] /model_mp["Process"] + 16
proc_less <- data.frame(c(1,2,4,8,16))
mpi <- read.csv("../output/serialize.csv", header = F, col.names = c("ser_des", "mpi"))
mpi["no_ser_des"] <- mpi["mpi"] - mpi["ser_des"]
mpi["Process"] <- proc_less
mpi["Serial"] <- rep(60, 5)
k = 12
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + 108
mpi[1,6] <- serial[1,1]
ggplot(data = mpi)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, Model, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, Model, col = "Model Open MPI"))
#, fig.width=7,fig.height=3
strong_all["mp_speedup"] <- strong_all[1,2]/strong_all["mp_all"]
strong_all["model_mp_speedup"] <- model_mp[1,3]/model_mp["model_mp"]
gg1 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mp_all, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_all, col = "OpenMP")) +
theme(legend.position = "top")
gg2 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_point(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_line(mapping = aes(Process, mp_speedup, col = "Open MP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "Open MP")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
mpi
strong_all
#, fig.width=7,fig.height=3
strong_all["mp_speedup"] <- strong_all[1,2]/strong_all["mp_all"]
strong_all["model_mp_speedup"] <- model_mp[1,3]/model_mp["model_mp"]
gg1 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mp_all, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_all, col = "OpenMP")) +
theme(legend.position = "top")
gg2 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_point(mapping = aes(Process, model_mp_speedup, col = "Model Open MP")) +
geom_line(mapping = aes(Process, mp_speedup, col = "Open MP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "Open MP")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
mpi
ggplot(data = mpi)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
theme(legend.position = "top")
mpi
mpi
#, fig.width=7,fig.height=3
mpi["mpi_speedup"] <- mpi[1,2]/mpi["mpi"]
mpi["model_mpi_speedup"] <- mpi[1,6]/mpi["mpi"]
gg1 <- ggplot(data = mpi)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
theme(legend.position = "top")
gg2 <- ggplot(data = mpi)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mpi_speedup, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, model_mpi_speedup, col = "Model Open MP")) +
geom_line(mapping = aes(Process, mpi_speedup, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi_speedup, col = "Open MPI")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
#, fig.width=7,fig.height=3
mpi["mpi_speedup"] <- mpi[1,2]/mpi["mpi"]
mpi["model_mpi_speedup"] <- mpi[1,6]/mpi["mpi"]
gg1 <- ggplot(data = mpi)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
theme(legend.position = "top")
gg2 <- ggplot(data = mpi)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mpi_speedup, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, model_mpi_speedup, col = "Model Open MPI")) +
geom_line(mapping = aes(Process, mpi_speedup, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi_speedup, col = "Open MPI")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
#preprocessing
proc <- data.frame(c(1,2,4,8,16,24))
proc_all <- data.frame(seq(1,24))
colnames(proc) <- "Process"
colnames(proc_all) <- "Process"
serial <- read.table("../output/serial.out", header = FALSE, col.names = c("Serial"))
mp <- read.table("../output/mp.out", header = FALSE, col.names = c("mp"))
mp_all <- read.table("../output/mp_1_24.out", header = FALSE, col.names = c("mp_all"))
strong <- data.frame(proc, serial, mp)
strong_all <- data.frame(proc_all, mp_all)
model_mp <- data.frame(proc_all, rep(60, 24))
colnames(model_mp) <- c("Process", "time_serial")
model_mp["model_mp"] <- model_mp["time_serial"] /model_mp["Process"] + 16
proc_less <- data.frame(c(1,2,4,8,16))
mpi <- read.csv("../output/serialize.csv", header = F, col.names = c("ser_des", "mpi"))
mpi["no_ser_des"] <- mpi["mpi"] - mpi["ser_des"]
mpi["Process"] <- proc_less
mpi["Serial"] <- rep(60, 5)
k = 12
mpi["Model"] <- mpi["Serial"]/(mpi["Process"]) + 72/mpi["Process"] + 108
mpi[1,6] <- serial[1,1]
#Plot
plot1 <- merge(strong, mpi, by="Process")
ggplot(data = plot1)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, Serial, col = "Serial")) +
geom_point(mapping = aes(Process, Serial, col = "Serial")) +
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp, col = "OpenMP"))
plot1
strong
mpi
plot1 <- merge(strong, mpi, by="Process")
plot1
ggplot(data = plot1)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, Serial, col = "Serial")) +
geom_point(mapping = aes(Process, Serial, col = "Serial")) +
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp, col = "OpenMP"))
strong
plot1
ggplot(data = plot1)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, Serial.x, col = "Serial")) +
geom_point(mapping = aes(Process, Serial.x, col = "Serial")) +
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp, col = "OpenMP"))
ggplot(data = plot1)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
scale_y_continuous(breaks = seq(0,650,by=20))+
scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, Serial.x, col = "Serial")) +
geom_point(mapping = aes(Process, Serial.x, col = "Serial")) +
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp, col = "OpenMP")) +
geom_line(mapping = aes(Process, no_ser_des, col = "Open MPI\nwithout deserialization")) +
geom_point(mapping = aes(Process, no_ser_des, col = "Open MPI\nwithout deserialization"))
#, fig.width=7,fig.height=3
strong_all["mp_speedup"] <- strong_all[1,2]/strong_all["mp_all"]
strong_all["model_mp_speedup"] <- model_mp[1,3]/model_mp["model_mp"]
gg1 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mp_all, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_all, col = "OpenMP")) +
theme(legend.position = "top")
gg2 <- ggplot(data = strong_all)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mp_speedup, col = "Model OpenMP")) +
geom_point(mapping = aes(Process, model_mp_speedup, col = "Model OpenMP")) +
geom_line(mapping = aes(Process, mp_speedup, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "OpenMP")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
#, fig.width=7,fig.height=3
mpi["mpi_speedup"] <- mpi[1,2]/mpi["mpi"]
mpi["model_mpi_speedup"] <- mpi[1,6]/mpi["mpi"]
gg1 <- ggplot(data = mpi)+
xlab("N of process") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, mpi, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi, col = "Open MPI")) +
theme(legend.position = "top")
gg2 <- ggplot(data = mpi)+
xlab("N of process") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=20))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, model_mpi_speedup, col = "Model Open MPI")) +
geom_point(mapping = aes(Process, model_mpi_speedup, col = "Model Open MPI")) +
geom_line(mapping = aes(Process, mpi_speedup, col = "Open MPI")) +
geom_point(mapping = aes(Process, mpi_speedup, col = "Open MPI")) +
theme(legend.position = "top")
grid.arrange(gg1, gg2, ncol=2)
proc_less <- data.frame(c(1,2,4,8,16))
mpi_weak <- read.table("../output/ompi_weak.out", header = FALSE, col.names = c("ompi_weak"))
mpi_weak["Process"] <- proc_less
mp_weak <- read.table("../output/mp_weak.out", header = FALSE, col.names = c("mp_weak"))
mp_weak["Process"] <- proc
weak <- merge(mpi_weak,mp_weak, bu="Process")
weak["ompi_speedup"] <- weak[1,2]/weak["ompi_weak"]
weak["mp_speedup"] <- weak[1,3]/weak["mp_weak"]
ggw1 <- ggplot(data = weak)+
xlab("N of process (log)") +
ylab("Time (s)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, ompi_weak, col = "Open MPI")) +
geom_point(mapping = aes(Process, ompi_weak, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp_weak, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_weak, col = "OpenMP")) +
theme(legend.position = "top")
ggw2 <- ggplot(data = weak)+
xlab("N of process (log)") +
ylab("T(1)/T(N)") +
theme_bw() +
scale_colour_brewer(type = "seq", palette = "Set1") +
# scale_y_continuous(breaks = seq(0,650,by=100))+
# scale_x_continuous(trans="log2")+
geom_line(mapping = aes(Process, ompi_speedup, col = "Open MPI")) +
geom_point(mapping = aes(Process, ompi_speedup, col = "Open MPI")) +
geom_line(mapping = aes(Process, mp_speedup, col = "OpenMP")) +
geom_point(mapping = aes(Process, mp_speedup, col = "OpenMP")) +
theme(legend.position = "top")
grid.arrange(ggw1, ggw2, ncol=2)
